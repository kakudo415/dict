name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - '**.csv'
  push:
    branches:
      - main
    paths:
      - '**.csv'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Date
        id: date
        run: |
          echo "::set-output name=iso8601_basic::$(date -u '+%Y%m%dT%H%M%SZ')"
          echo "::set-output name=iso8601_extended::$(date -u '+%Y-%m-%dT%H:%M:%SZ')"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Export for macOS
        run: |
          mkdir -p ${{ steps.date.outputs.iso8601_basic }}/macOS
          tail -n +2 ./math.csv | sed -r 's/(.*),(.*),(.*),(.*)/\2,\1,\4,/g' > ${{ steps.date.outputs.iso8601_basic }}/macOS/dict.txt
      
      - name: Export for Windows
        run: |
          mkdir -p ${{ steps.date.outputs.iso8601_basic }}/Windows
          tail -n +2 ./math.csv | sed -r 's/(.*),(.*),(.*),(.*)/\2\t\1\t\3/g' > ${{ steps.date.outputs.iso8601_basic }}/Windows/dict.txt

      - name: Archive
        run: zip -r ${{ steps.date.outputs.iso8601_basic }}.zip ${{ steps.date.outputs.iso8601_basic }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.iso8601_basic }}
          release_name: Release ${{ steps.date.outputs.iso8601_extended }}
          draft: false
          prerelease: false

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.date.outputs.iso8601_basic }}.zip
          asset_name: ${{ steps.date.outputs.iso8601_basic }}.zip
          asset_content_type: application/zip
